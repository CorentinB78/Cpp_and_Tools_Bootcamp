<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.30.1 (20180420.1509)
 -->
<!-- Title: bench; 1190 samples Pages: 1 -->
<svg width="100%" height="100%"
  xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<script type="text/ecmascript"><![CDATA[
// SVGPan
// http://www.cyberz.org/blog/2009/12/08/svgpan-a-javascript-svg-panzoomdrag-library/
// Local modification: if(true || ...) below to force panning, never moving.

/**
 *  SVGPan library 1.2
 * ====================
 *
 * Given an unique existing element with id "viewport", including the
 * the library into any SVG adds the following capabilities:
 *
 *  - Mouse panning
 *  - Mouse zooming (using the wheel)
 *  - Object dargging
 *
 * Known issues:
 *
 *  - Zooming (while panning) on Safari has still some issues
 *
 * Releases:
 *
 * 1.2, Sat Mar 20 08:42:50 GMT 2010, Zeng Xiaohui
 *	Fixed a bug with browser mouse handler interaction
 *
 * 1.1, Wed Feb  3 17:39:33 GMT 2010, Zeng Xiaohui
 *	Updated the zoom code to support the mouse wheel on Safari/Chrome
 *
 * 1.0, Andrea Leofreddi
 *	First release
 *
 * This code is licensed under the following BSD license:
 *
 * Copyright 2009-2010 Andrea Leofreddi <a.leofreddi@itcharm.com>. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 *
 *    1. Redistributions of source code must retain the above copyright notice, this list of
 *       conditions and the following disclaimer.
 *
 *    2. Redistributions in binary form must reproduce the above copyright notice, this list
 *       of conditions and the following disclaimer in the documentation and/or other materials
 *       provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY Andrea Leofreddi ``AS IS'' AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
 * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL Andrea Leofreddi OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * The views and conclusions contained in the software and documentation are those of the
 * authors and should not be interpreted as representing official policies, either expressed
 * or implied, of Andrea Leofreddi.
 */

var root = document.documentElement;

var state = 'none', stateTarget, stateOrigin, stateTf;

setupHandlers(root);

/**
 * Register handlers
 */
function setupHandlers(root){
	setAttributes(root, {
		"onmouseup" : "add(evt)",
		"onmousedown" : "handleMouseDown(evt)",
		"onmousemove" : "handleMouseMove(evt)",
		"onmouseup" : "handleMouseUp(evt)",
		//"onmouseout" : "handleMouseUp(evt)", // Decomment this to stop the pan functionality when dragging out of the SVG element
	});

	if(navigator.userAgent.toLowerCase().indexOf('webkit') >= 0)
		window.addEventListener('mousewheel', handleMouseWheel, false); // Chrome/Safari
	else
		window.addEventListener('DOMMouseScroll', handleMouseWheel, false); // Others

	var g = svgDoc.getElementById("svg");
	g.width = "100%";
	g.height = "100%";
}

/**
 * Instance an SVGPoint object with given event coordinates.
 */
function getEventPoint(evt) {
	var p = root.createSVGPoint();

	p.x = evt.clientX;
	p.y = evt.clientY;

	return p;
}

/**
 * Sets the current transform matrix of an element.
 */
function setCTM(element, matrix) {
	var s = "matrix(" + matrix.a + "," + matrix.b + "," + matrix.c + "," + matrix.d + "," + matrix.e + "," + matrix.f + ")";

	element.setAttribute("transform", s);
}

/**
 * Dumps a matrix to a string (useful for debug).
 */
function dumpMatrix(matrix) {
	var s = "[ " + matrix.a + ", " + matrix.c + ", " + matrix.e + "\n  " + matrix.b + ", " + matrix.d + ", " + matrix.f + "\n  0, 0, 1 ]";

	return s;
}

/**
 * Sets attributes of an element.
 */
function setAttributes(element, attributes){
	for (i in attributes)
		element.setAttributeNS(null, i, attributes[i]);
}

/**
 * Handle mouse move event.
 */
function handleMouseWheel(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var delta;

	if(evt.wheelDelta)
		delta = evt.wheelDelta / 3600; // Chrome/Safari
	else
		delta = evt.detail / -90; // Mozilla

	var z = 1 + delta; // Zoom factor: 0.9/1.1

	var g = svgDoc.getElementById("viewport");

	var p = getEventPoint(evt);

	p = p.matrixTransform(g.getCTM().inverse());

	// Compute new scale matrix in current mouse position
	var k = root.createSVGMatrix().translate(p.x, p.y).scale(z).translate(-p.x, -p.y);

        setCTM(g, g.getCTM().multiply(k));

	stateTf = stateTf.multiply(k.inverse());
}

/**
 * Handle mouse move event.
 */
function handleMouseMove(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = svgDoc.getElementById("viewport");

	if(state == 'pan') {
		// Pan mode
		var p = getEventPoint(evt).matrixTransform(stateTf);

		setCTM(g, stateTf.inverse().translate(p.x - stateOrigin.x, p.y - stateOrigin.y));
	} else if(state == 'move') {
		// Move mode
		var p = getEventPoint(evt).matrixTransform(g.getCTM().inverse());

		setCTM(stateTarget, root.createSVGMatrix().translate(p.x - stateOrigin.x, p.y - stateOrigin.y).multiply(g.getCTM().inverse()).multiply(stateTarget.getCTM()));

		stateOrigin = p;
	}
}

/**
 * Handle click event.
 */
function handleMouseDown(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = svgDoc.getElementById("viewport");

	if(true || evt.target.tagName == "svg") {
		// Pan mode
		state = 'pan';

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	} else {
		// Move mode
		state = 'move';

		stateTarget = evt.target;

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	}
}

/**
 * Handle mouse button release event.
 */
function handleMouseUp(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	if(state == 'pan' || state == 'move') {
		// Quit pan mode
		state = '';
	}
}

]]></script>
<g id="viewport" transform="translate(0,0)">
<g id="viewport" class="graph" transform="scale(1 1) rotate(0) translate(4 572)">
<title>bench; 1190 samples</title>
<polygon fill="white" stroke="white" points="-4,5 -4,-572 672,-572 672,5 -4,5"/>
<!-- Legend -->
<g id="node1" class="node"><title>Legend</title>
<text text-anchor="start" x="8" y="-544.8" font-family="Times,serif" font-size="24.00">bench</text>
<text text-anchor="start" x="8" y="-518.8" font-family="Times,serif" font-size="24.00">Total samples: 1190</text>
<text text-anchor="start" x="8" y="-492.8" font-family="Times,serif" font-size="24.00">Focusing on: 1190</text>
<text text-anchor="start" x="8" y="-466.8" font-family="Times,serif" font-size="24.00">Dropped nodes with &lt;= 5 abs(samples)</text>
<text text-anchor="start" x="8" y="-440.8" font-family="Times,serif" font-size="24.00">Dropped edges with &lt;= 1 samples</text>
</g>
<!-- N1 -->
<g id="node2" class="node"><title>N1</title>
<polygon fill="none" stroke="black" points="484,-377.5 410,-377.5 410,-342.5 484,-342.5 484,-377.5"/>
<text text-anchor="middle" x="447" y="-367.1" font-family="Times,serif" font-size="8.00">__libc_start_main</text>
<text text-anchor="end" x="476" y="-358.1" font-family="Times,serif" font-size="8.00">0 (0.0%)</text>
<text text-anchor="end" x="476" y="-349.1" font-family="Times,serif" font-size="8.00">of 1190 (100.0%)</text>
</g>
<!-- N3 -->
<g id="node4" class="node"><title>N3</title>
<polygon fill="none" stroke="black" points="483.25,-289.5 410.75,-289.5 410.75,-254.5 483.25,-254.5 483.25,-289.5"/>
<text text-anchor="middle" x="447" y="-279.1" font-family="Times,serif" font-size="8.00">main</text>
<text text-anchor="end" x="475.5" y="-270.1" font-family="Times,serif" font-size="8.00">0 (0.0%)</text>
<text text-anchor="end" x="475.5" y="-261.1" font-family="Times,serif" font-size="8.00">of 1190 (100.0%)</text>
</g>
<!-- N1&#45;&gt;N3 -->
<g id="edge2" class="edge"><title>N1&#45;&gt;N3</title>
<path fill="none" stroke="black" stroke-width="2" d="M447,-342.418C447,-330.283 447,-313.564 447,-299.575"/>
<polygon fill="black" stroke="black" points="450.5,-299.531 447,-289.531 443.5,-299.531 450.5,-299.531"/>
<text text-anchor="middle" x="461" y="-312.3" font-family="Times,serif" font-size="14.00">1190</text>
</g>
<!-- N2 -->
<g id="node3" class="node"><title>N2</title>
<polygon fill="none" stroke="black" points="483.25,-516.5 410.75,-516.5 410.75,-481.5 483.25,-481.5 483.25,-516.5"/>
<text text-anchor="middle" x="447" y="-506.1" font-family="Times,serif" font-size="8.00">_start</text>
<text text-anchor="end" x="475.5" y="-497.1" font-family="Times,serif" font-size="8.00">0 (0.0%)</text>
<text text-anchor="end" x="475.5" y="-488.1" font-family="Times,serif" font-size="8.00">of 1190 (100.0%)</text>
</g>
<!-- N2&#45;&gt;N1 -->
<g id="edge1" class="edge"><title>N2&#45;&gt;N1</title>
<path fill="none" stroke="black" stroke-width="2" d="M447,-481.475C447,-458.228 447,-415.609 447,-387.797"/>
<polygon fill="black" stroke="black" points="450.5,-387.584 447,-377.584 443.5,-387.584 450.5,-387.584"/>
<text text-anchor="middle" x="461" y="-400.3" font-family="Times,serif" font-size="14.00">1190</text>
</g>
<!-- N4 -->
<g id="node5" class="node"><title>N4</title>
<polygon fill="none" stroke="black" points="480,-202 414,-202 414,-158 480,-158 480,-202"/>
<text text-anchor="middle" x="447" y="-191.6" font-family="Times,serif" font-size="8.00">run_calculation</text>
<text text-anchor="middle" x="447" y="-182.6" font-family="Times,serif" font-size="8.00">(inline)</text>
<text text-anchor="end" x="472" y="-173.6" font-family="Times,serif" font-size="8.00">0 (0.0%)</text>
<text text-anchor="end" x="472" y="-164.6" font-family="Times,serif" font-size="8.00">of 981 (82.4%)</text>
</g>
<!-- N3&#45;&gt;N4 -->
<g id="edge3" class="edge"><title>N3&#45;&gt;N4</title>
<path fill="none" stroke="black" stroke-width="2" stroke-dasharray="5,2" d="M447,-254.493C447,-242.765 447,-226.652 447,-212.502"/>
<polygon fill="black" stroke="black" points="450.5,-212.168 447,-202.169 443.5,-212.169 450.5,-212.168"/>
<text text-anchor="middle" x="457.5" y="-224.3" font-family="Times,serif" font-size="14.00">981</text>
</g>
<!-- N5 -->
<g id="node6" class="node"><title>N5</title>
<polygon fill="none" stroke="black" points="667,-106 365,-106 365,-0 667,-0 667,-106"/>
<text text-anchor="middle" x="516" y="-66.72" font-family="Times,serif" font-size="44.10">sum_of_squares</text>
<text text-anchor="end" x="659" y="-17.72" font-family="Times,serif" font-size="44.10">620 (52.1%)</text>
</g>
<!-- N3&#45;&gt;N5 -->
<g id="edge6" class="edge"><title>N3&#45;&gt;N5</title>
<path fill="none" stroke="black" stroke-width="1.05378" d="M459.757,-254.271C463.862,-248.599 468.302,-242.141 472,-236 480.714,-221.526 483.653,-218.026 489,-202 498.163,-174.539 504.453,-143.113 508.64,-116.303"/>
<polygon fill="black" stroke="black" points="512.122,-116.681 510.143,-106.272 505.2,-115.643 512.122,-116.681"/>
<text text-anchor="middle" x="510.5" y="-176.3" font-family="Times,serif" font-size="14.00">209</text>
</g>
<!-- N6 -->
<g id="node7" class="node"><title>N6</title>
<polygon fill="none" stroke="black" points="347,-104 87,-104 87,-2 347,-2 347,-104"/>
<text text-anchor="middle" x="217" y="-65.92" font-family="Times,serif" font-size="42.60">sum_of_cubes</text>
<text text-anchor="end" x="339" y="-18.92" font-family="Times,serif" font-size="42.60">570 (47.9%)</text>
</g>
<!-- N4&#45;&gt;N6 -->
<g id="edge4" class="edge"><title>N4&#45;&gt;N6</title>
<path fill="none" stroke="black" stroke-width="2" d="M413.556,-160.824C388.395,-147.149 352.502,-127.642 318.258,-109.032"/>
<polygon fill="black" stroke="black" points="319.584,-105.769 309.126,-104.069 316.241,-111.919 319.584,-105.769"/>
<text text-anchor="middle" x="382.5" y="-128.3" font-family="Times,serif" font-size="14.00">570</text>
</g>
<!-- N4&#45;&gt;N5 -->
<g id="edge5" class="edge"><title>N4&#45;&gt;N5</title>
<path fill="none" stroke="black" stroke-width="2" d="M458.705,-157.795C465.262,-145.917 473.807,-130.437 482.288,-115.072"/>
<polygon fill="black" stroke="black" points="485.491,-116.513 487.259,-106.067 479.362,-113.13 485.491,-116.513"/>
<text text-anchor="middle" x="485.5" y="-128.3" font-family="Times,serif" font-size="14.00">411</text>
</g>
</g>
</g></svg>
